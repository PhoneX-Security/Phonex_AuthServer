<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://jax-ws.dev.java.net/spring/core
       http://jax-ws.dev.java.net/spring/core.xsd
       http://jax-ws.dev.java.net/spring/servlet
       http://jax-ws.dev.java.net/spring/servlet.xsd">

    <!-- SPRING 2.0
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
    -->
            
    <!-- Spring 3.0
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     -->
       
    <context:annotation-config />
    <context:component-scan base-package="cz.muni.fi.pa165.cards.**" />
    <context:component-scan base-package="com.phoenix.soap" />
    <context:component-scan base-package="" />
    <tx:annotation-driven/>
    <!--<tx:annotation-driven transaction-manager="transactionManager" />-->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
    <bean class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor" />
    
     <bean id="greetingService" class="com.phoenix.soap.GreetingService"/>
    <bean id="greetingServiceEndpoint" class="com.phoenix.soap.GreetingServiceEndpoint">
    </bean>
    <bean class="org.springframework.remoting.jaxws.SimpleJaxWsServiceExporter">
        <property name="baseAddress" value="http://localhost:8089/" />
    </bean>

    
    <!-- 
        Logging
    -->
    <bean id="log4jInitialization" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass" value="org.springframework.util.Log4jConfigurer" />
        <property name="targetMethod" value="initLogging" />
        <property name="arguments">
            <list>
                <value>classpath:properties/log4j.properties</value>
            </list>
        </property>
    </bean>
    
    <bean id="log4jInitializationJLU" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass" value="org.slf4j.bridge.SLF4JBridgeHandler" />
        <property name="targetMethod" value="install" />
    </bean>
        
    <!-- 
        ConfigurationPlaceHolder 
    -->
    <bean id="dbconfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="location">
                    <value>classpath:properties/db.properties</value>
            </property>
    </bean>        
        
    <!-- 
        Data sources
    --> 
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource"
          p:driverClassName="${db.driver}"
          p:url="${db.url}"
          p:username="${db.user}"
          p:password="${db.password}" />
          
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" >
        <!-- setter for data source -->
        <property name="dataSource" ref="dataSource" />
    </bean>  
        
    <!-- EntityManagerFactory for JPA 2.0 from Spring -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" p:showSql="true" p:generateDdl="true">
                <property name="databasePlatform" value="${db.dialect}" />
            </bean>
        </property>
        <property name="dataSource" ref="dataSource" />
        <property name="persistenceUnitName" value="cards_management_PU"/>
        <property name="loadTimeWeaver">
            <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
        </property>
        <property name="persistenceXmlLocation" value="/WEB-INF/persistence.xml"/>
        <!--
        <property name="jpaProperties">
            <value>
                 hibernate.search.default.indexBase=${db.indexLocation}
            </value>
        </property>
        -->
    </bean>
    
    <bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
        <property name="scopes">
            <map>
                <entry key="view">
                    <bean class="cz.muni.fi.pa165.cards.helpers.ViewScope" />
                </entry>
            </map>
        </property>
    </bean>
     
    <bean id="FulltextSearchHelper" class="cz.muni.fi.pa165.cards.fulltext.FulltextSearchHelper"
        p:indexDirectory="${db.indexLocation}"
    />
     
    <bean id="userManager" class="cz.muni.fi.pa165.cards.managers.UserManager"/>
    <bean id="categoryManager" class="cz.muni.fi.pa165.cards.managers.CategoryManager"/>
    <bean id="cardManager" class="cz.muni.fi.pa165.cards.managers.CardManager"/>
  
    <!--
        Auth
    -->
    <bean id="customAuthenticationProvider" class="cz.muni.fi.pa165.cards.auth.CustomAuth"/>
    <bean id="myUserDetailsService" class="cz.muni.fi.pa165.cards.auth.MyUserDetailsService"/>
        
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <!-- 
        Managed beans 
    -->
    <bean id="userBean" class="cz.muni.fi.pa165.cards.backing.UserBean" scope="session"/>
    <bean id="categoryBean" class="cz.muni.fi.pa165.cards.backing.CategoryBean" scope="session"/>
    <bean id="cardBean" class="cz.muni.fi.pa165.cards.backing.CardBean" scope="view"/>
    <bean id="cardUploadBean" class="cz.muni.fi.pa165.cards.backing.CardUploadBean" scope="view"/>
    <bean id="registerUserBean" class="cz.muni.fi.pa165.cards.backing.RegisterUserBean" scope="request"/>           
	<bean id="mobileBean" class="cz.muni.fi.pa165.cards.backing.MobileBean" scope="session"/>
</beans>
