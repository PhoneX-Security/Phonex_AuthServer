<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2007 the original author or authors.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:sws="http://www.springframework.org/schema/web-services"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
       http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services-2.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://jax-ws.dev.java.net/spring/core
       http://jax-ws.dev.java.net/spring/core.xsd
       http://jax-ws.dev.java.net/spring/servlet
       http://jax-ws.dev.java.net/spring/servlet.xsd
       ">
    
    <context:annotation-config />
    <context:component-scan base-package="com.phoenix"/>
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
    
    <!--
        Configuration
    -->
    <bean id="fallbackConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
        p:placeholderPrefix="${"
        p:placeholderSuffix="}">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>
    
    <!-- 
    
    <value>${phonexconfig}</value>
    -->
    <bean id="servletConfig" class="org.springframework.web.context.support.ServletContextPropertyPlaceholderConfigurer"
        p:placeholderPrefix="#["
        p:placeholderSuffix="]">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="searchContextAttributes" value="true"/>
        <property name="contextOverride" value="true"/>
        <property name="ignoreResourceNotFound" value="true"/>
        
        <property name="locations">
            <list>
                <value>classpath:properties/application.properties</value>
                <value>classpath:phonex.properties</value>
                <value>classpath:phonex.local.properties</value>
                <value>#[phonexconfig]</value>
            </list>
        </property>
    </bean>
    
    
    <!-- 
        Logging
    -->
    <bean id="log4jInitialization" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass" value="org.springframework.util.Log4jConfigurer" />
        <property name="targetMethod" value="initLogging" />
        <property name="arguments">
            <list>
                <value>classpath:properties/log4j.properties</value>
            </list>
        </property>
    </bean>
    
    <bean id="log4jInitializationJLU" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass" value="org.slf4j.bridge.SLF4JBridgeHandler" />
        <property name="targetMethod" value="install" />
    </bean>
    
    <!--
        Different profiles, development vs. production profile for DB.
     -->
    <beans profile="dev">
        <bean id="dbconfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="location">
                <value>classpath:properties/db.properties</value>
            </property>
        </bean>   
        <!-- 
            Data sources
        --> 
        <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource"
          p:driverClassName="${db.driver}"
          p:url="${db.url}"
          p:username="${db.user}"
          p:password="${db.password}" />
          
        <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" >
            <!-- setter for data source -->
            <property name="dataSource" ref="dataSource" />
        </bean>  
        
        <!-- EntityManagerFactory for JPA 2.0 from Spring -->
        <!-- org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - not very good for Hibernate and Indexes. 
        But is seems that it works properly, even with non-unique indexes. -->
        <!-- org.springframework.orm.jpa.LocalEntityManagerFactoryBean -->
        <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
            <property name="jpaVendorAdapter">
                <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" p:showSql="true" p:generateDdl="true">
                    <property name="databasePlatform" value="${db.dialect}" />
                </bean>
            </property>
            <property name="dataSource" ref="dataSource" />
            <property name="persistenceUnitName" value="cards_management_PU"/>
            <property name="loadTimeWeaver">
                <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
            </property>
            <property name="persistenceXmlLocation" value="/WEB-INF/persistence.xml"/>
        </bean>
     
        <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
            <property name="entityManagerFactory" ref="entityManagerFactory"/>
            <property name="dataSource" ref="dataSource"/>
        </bean>

        <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
            <property name="dataSource" ref="dataSource" />
        </bean>
    </beans>
    <beans profile="prod">
        <bean id="dbconfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="location">
                <value>classpath:properties/db-prod.properties</value>
            </property>
        </bean>    
        <!-- 
            Data sources
        --> 
        <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource"
          p:driverClassName="${db.driver}"
          p:url="${db.url}"
          p:username="${db.user}"
          p:password="${db.password}" />
          
        <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" >
            <!-- setter for data source -->
            <property name="dataSource" ref="dataSource" />
        </bean>  
        
        <!-- EntityManagerFactory for JPA 2.0 from Spring -->
        <!-- org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - not very good for Hibernate and Indexes. 
        But is seems that it works properly, even with non-unique indexes. -->
        <!-- org.springframework.orm.jpa.LocalEntityManagerFactoryBean -->
        <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
            <property name="jpaVendorAdapter">
                <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" p:showSql="true" p:generateDdl="true">
                    <property name="databasePlatform" value="${db.dialect}" />
                </bean>
            </property>
            <property name="dataSource" ref="dataSource" />
            <property name="persistenceUnitName" value="cards_management_PU"/>
            <property name="loadTimeWeaver">
                <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
            </property>
            <property name="persistenceXmlLocation" value="/WEB-INF/persistence-prod.xml"/>
        </bean>
            <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
            <property name="entityManagerFactory" ref="entityManagerFactory"/>
            <property name="dataSource" ref="dataSource"/>
        </bean>

        <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
            <property name="dataSource" ref="dataSource" />
        </bean>
    </beans>
</beans>
