package com.phoenix.db;

// Generated Dec 2, 2012 7:18:24 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Card generated by hbm2java
 */
@Entity
@Table(name = "Card", catalog = "phoenixdb")
public class Card implements java.io.Serializable {

	private Long id;
	private User user;
	private String address;
	private String company;
	private String description;
	private String email;
	private String firstName;
	private boolean publicVisibility;
	private String secondName;
	private String telephone;
	private Set imagesForCardId = new HashSet(0);
	private Set userCards = new HashSet(0);
	private Set imagesForImageId = new HashSet(0);
	private Set categories = new HashSet(0);
	private Set cardPropertieses = new HashSet(0);

	public Card() {
	}

	public Card(boolean publicVisibility) {
		this.publicVisibility = publicVisibility;
	}

	public Card(User user, String address, String company, String description,
			String email, String firstName, boolean publicVisibility,
			String secondName, String telephone, Set imagesForCardId,
			Set userCards, Set imagesForImageId, Set categories,
			Set cardPropertieses) {
		this.user = user;
		this.address = address;
		this.company = company;
		this.description = description;
		this.email = email;
		this.firstName = firstName;
		this.publicVisibility = publicVisibility;
		this.secondName = secondName;
		this.telephone = telephone;
		this.imagesForCardId = imagesForCardId;
		this.userCards = userCards;
		this.imagesForImageId = imagesForImageId;
		this.categories = categories;
		this.cardPropertieses = cardPropertieses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "owner_id")
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "address")
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "company")
	public String getCompany() {
		return this.company;
	}

	public void setCompany(String company) {
		this.company = company;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "email")
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "firstName")
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "publicVisibility", nullable = false)
	public boolean isPublicVisibility() {
		return this.publicVisibility;
	}

	public void setPublicVisibility(boolean publicVisibility) {
		this.publicVisibility = publicVisibility;
	}

	@Column(name = "secondName")
	public String getSecondName() {
		return this.secondName;
	}

	public void setSecondName(String secondName) {
		this.secondName = secondName;
	}

	@Column(name = "telephone")
	public String getTelephone() {
		return this.telephone;
	}

	public void setTelephone(String telephone) {
		this.telephone = telephone;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cardByCardId")
	public Set getImagesForCardId() {
		return this.imagesForCardId;
	}

	public void setImagesForCardId(Set imagesForCardId) {
		this.imagesForCardId = imagesForCardId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "card")
	public Set getUserCards() {
		return this.userCards;
	}

	public void setUserCards(Set userCards) {
		this.userCards = userCards;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cardByImageId")
	public Set getImagesForImageId() {
		return this.imagesForImageId;
	}

	public void setImagesForImageId(Set imagesForImageId) {
		this.imagesForImageId = imagesForImageId;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "Card_Category", catalog = "phoenixdb", joinColumns = { @JoinColumn(name = "Card_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "categories_id", nullable = false, updatable = false) })
	public Set getCategories() {
		return this.categories;
	}

	public void setCategories(Set categories) {
		this.categories = categories;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "card")
	public Set getCardPropertieses() {
		return this.cardPropertieses;
	}

	public void setCardPropertieses(Set cardPropertieses) {
		this.cardPropertieses = cardPropertieses;
	}

}
